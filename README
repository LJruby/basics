RoR Installation on *ubuntu 14.10:

-sudo apt-get install curl
-curl -L get.rvm.io | bash -s stable --auto (try downloading the signatures and repeat command)
-source "$HOME/.rvm/scripts/rvm" (after restart make sure that the line is visible in .bash_profile and/or .profile)
-rvm get stable --autolibs=enable
-rvm install ruby
-rvm --default use ruby-x.x.x (to change version to desired one)
-rvm docs generate-ri (to generate docs - optional)
-gem install rails
-sudo apt-get install nodejs

RB files:
argv - playing with string and arrays
01 - convert integer to string
02 - create an array, populate with random values, indicate max, sort
03 - characters switch in string
04 - put text lines into array
05 - check phrase occurence in string
06 - display hash length
07 - display values and keys
08 - read the input
09 - copy file
10 - append a file
11 - read a file
12 - display last modification date (hour)
13 - simple if
14 - simple for
15 - simple while
16 - create and use a method
17 - create and use method with parameters
18 - create hash, check if it's empty, display size and convert to array
19 - put each string character into array
20 - reverse string / reverse string permanently
21 - switch variables without tmp
22 - modulus
23 - factorial
24 - get the last characte<r from inputed string
25 - get the middle character (approx)
26 - strings joining
27 - check whether inputed name is male's or female's one (approx)
28 - check if inputed value is greater than 0, or not
29 - list all elements of the array (2 ways)
30 - iterate the array and multiply each element by 2
31 - add additional element to the array
31 - reverse the array
32 - iterate the array and display choosen pattern (if exists)
33 - create random array, put only choosen elements to second array
34 - check pythagorean triples
35 - sum all digits from given number
36 - check whether given number equals i*i, where i is an integer
37 - exponent
38 - greatest common divisor
39 - uppercase to lowercase and vice versa
40 - display all array elements (3 ways)
41 - display unique array elements
42 - changing the array using map function
43 - list keys and values in hash
44 - select desired hash element
45 - merge two hashes
46 - iterate on range
47 - convert array to hash
48 - show array elements (in function)
49 - constant value definition
50 - class creation (initialize method)
51 - create class accessor method
52 - class creation (initialize with parameters)
53 - private methods
54 - puts chosen class variables into array
55 - define to_s for class (allows for using puts on class itself)
56 - getter && setter
57 - accessors (build-in getters && setters)
58 - object are accessible through references
59 - class static method
60 - modules inclusion
61 - class inheritance

